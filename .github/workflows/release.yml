on:
  release:
    types: [created]

jobs:
  release:
    name: release Go binary
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, darwin]
        goarch: ["386", amd64, arm64]
        exclude:
          - goarch: "386"
            goos: darwin
          - goarch: arm64
            goos: windows

    steps:
      - uses: actions/checkout@v2
      - uses: wangyoucao577/go-release-action@v1.25
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          goos: ${{ matrix.goos }}
          goarch: ${{ matrix.goarch }}
          goversion: "https://dl.google.com/go/go1.17.6.linux-amd64.tar.gz"
          binary_name: "launchbox"
          extra_files: README.md
          overwrite: true
          retry: 5

  publish-docker-image:
    name: Build Docker image and push to ghcr.io
    # run only when code is compiling and tests are passing
    runs-on: ubuntu-latest

    # steps to perform in job
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # setup Docker buld action
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Github Packages
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Build image and push to GitHub Container Registry
        uses: docker/build-push-action@v2

  publish-helm-chart:
    name: Package and publish helm chart
    runs-on: ubuntu-latest

    env:
      HELM_EXPERIMENTAL_OCI: 1
      HELM_VERSION_TO_INSTALL: 3.7.2
      GCR_IMAGE: ghcr.io/${{ github.repository_owner }}/launchbox

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install helm
        uses: Azure/setup-helm@v1
        with:
          version: ${{ env.HELM_VERSION_TO_INSTALL }}

      - name: Login to ghcr
        run: |
          echo ${{ github.token }} | helm registry login ${{ env.GCR_IMAGE }} --username ${{ github.actor }} --password-stdin

      - name: Save helm chart
        run: |
          helm chart save ${{ github.workspace }}/deploy/helm/launchbox/ ${{ env.GCR_IMAGE }}:${{ github.ref_name }}

      - name: Publish chart
        run: |
          helm chart push ${{ env.GCR_IMAGE }}:${{ github.ref_name }}
          
